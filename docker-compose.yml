version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: agenda-mysql
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    environment:
      MYSQL_DATABASE: agenda
      MYSQL_USER: agenda
      MYSQL_PASSWORD: agenda_pass
      MYSQL_ROOT_PASSWORD: root_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql  # ← ESTE VOLUMEN DEBE ESTAR DEFINIDO ABAJO
    networks:
      - agenda-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_pass"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # Backend Spring Boot
  backend:
    build:
      context: ./backend-ci-cd
      dockerfile: Dockerfile
    container_name: agenda-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=mysql
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/agenda?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=agenda
      - SPRING_DATASOURCE_PASSWORD=agenda_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
    volumes:
      - backend-data:/app/data
    networks:
      - agenda-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/contactos"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build:
      context: ./frontend-ci-cd
      dockerfile: Dockerfile
    container_name: agenda-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    networks:
      - agenda-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (opcional, para producción)
  nginx:
    image: nginx:alpine
    container_name: agenda-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - agenda-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  mysql-data:    # ← AGREGA ESTA LÍNEA
    driver: local
  h2-data:
    driver: local
  backend-data:
    driver: local

networks:
  agenda-network:
    driver: bridge